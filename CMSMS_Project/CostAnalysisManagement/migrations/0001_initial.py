# Generated by Django 4.1.1 on 2022-09-22 17:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DirectLaborCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DLamount', models.FloatField(default=0)),
                ('date', models.DateTimeField(null=True)),
                ('category', models.CharField(choices=[('Wages', 'Wages'), ('Payroll Taxes', 'Payroll Taxes'), ('Workers Compensation', 'Workers Compensation'), ('Life Insurance', 'Life Insurance'), ('Health Insurance', 'Health Insurance')], max_length=30, null=True)),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('reorderLevel', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('Total_DLAmount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DirectMaterialCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DMamount', models.FloatField(default=0)),
                ('date', models.DateTimeField(null=True)),
                ('category', models.CharField(choices=[('Skin Cosmetics', 'Skin Cosmetics'), ('Hair Cosmetics', 'Hair Cosmetics'), ('Nail Cosmetics', 'Nail Cosmetics'), ('Face Makeup', 'Face Makeup')], max_length=30, null=True)),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('reorderLevel', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('Total_DMAmount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('date', models.DateTimeField(null=True)),
                ('type', models.PositiveIntegerField(choices=[(1, 'RENT'), (2, 'BILLS'), (3, 'TRAVEL'), (4, 'MATERIALS')])),
                ('repetitive', models.BooleanField(default=False)),
                ('repetition_interval', models.PositiveIntegerField(choices=[(1, 'DAYS'), (2, 'WEEKS'), (3, 'MONTHS'), (4, 'YEAR')], default=1)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FactoryOverheads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FOamount', models.FloatField(default=0)),
                ('date', models.DateTimeField(null=True)),
                ('category', models.CharField(choices=[('Labor Hours required', 'Labor Hours required'), ('Labor Cost per hour', 'Labor Cost per hour'), ('Electricity Units', 'Electricity Units'), ('Rent of Factory Premises', 'Rent of Factory Premises'), ('Insurance Expenses', 'Insurance Expenses'), ('Depreciation of Machinery', 'Depreciation of Machinery'), ('Direct Cost of Machinery Oil', 'Direct Cost of Machinery Oil'), ('Electricity Cost Per Unit', 'Electricity Cost Per Unit')], max_length=30, null=True)),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('reorderLevel', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('Total_FOAmount', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productName', models.CharField(max_length=200, null=True)),
                ('category', models.CharField(choices=[('Skin Cosmetics', 'Skin Cosmetics'), ('Hair Cosmetics', 'Hair Cosmetics'), ('Nail Cosmetics', 'Nail Cosmetics'), ('Face Makeup', 'Face Makeup')], max_length=200, null=True)),
                ('target_quantity', models.PositiveIntegerField(null=True)),
                ('due_date', models.DateField(null=True)),
                ('status', models.CharField(default='Scheduled', max_length=200, null=True)),
                ('count', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('date', models.DateTimeField(null=True)),
                ('category', models.CharField(choices=[('Skin Cosmetics', 'Skin Cosmetics'), ('Hair Cosmetics', 'Hair Cosmetics'), ('Nail Cosmetics', 'Nail Cosmetics'), ('Face Makeup', 'Face Makeup')], max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reorderLevel', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('Total_DMAmount', models.FloatField(default=0)),
                ('Total_DLAmount', models.FloatField(default=0)),
                ('Total_FOAmount', models.FloatField(default=0)),
                ('Total_ProductCost', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.PositiveIntegerField(choices=[(1, 'MONTHLY'), (2, 'ANNUALLY')])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RetailPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100, null=True)),
                ('RPamount', models.FloatField(null=True)),
                ('Total_ProductCost', models.FloatField(null=True)),
                ('markup_Price', models.FloatField(null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reorderLevel', models.PositiveIntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('Total_RPAmount', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materials', models.CharField(max_length=1000, null=True)),
                ('cost_qty', models.IntegerField(null=True)),
                ('product_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CostAnalysisManagement.retailprice')),
            ],
        ),
    ]
